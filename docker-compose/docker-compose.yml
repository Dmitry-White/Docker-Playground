version: '3.7'

services:

  node:
    # Remove if scaling is used
    # Docker Compose will give it a name instead
    # container_name: nodeapp
    
    # Declarative scaling
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    image: nodeapp
    build:
      context: .
      # ################ ENVIRONMENT ###################
      # Requires env variable: export APP_ENV=development OR export APP_ENV=production
      # ################################################
      dockerfile: node.${APP_ENV}.dockerfile
      args:
        buildversion: 1
    ports:
      # Short Syntax 3 options:
      # - HOST:CONTAINER
      # - CONTAINER (an ephemeral host port is chosen for the host port, required option for scaling)
      # - IPADDR:HOST:CONTAINER
      # When mapping ports in the HOST:CONTAINER format,
      # you may experience erroneous results when using a container port lower than 60,
      # because YAML parses numbers in the format xx:yy as a base-60 value.

      - "3000"

      # Long Syntax:
      # allows the configuration of additional fields that canâ€™t be expressed in the short form
      # - target: 3000
      #   published: 3000
      #   protocol: tcp # tcp or udp
      #   mode: host # host or ingress
    # ################ ENVIRONMENT ###################
    environment:
      - APP_VERSION=1.0
    # AND/OR
    env_file:
      - ./.node.${APP_ENV}.env
    # ################################################
    networks:
      - nodeapp-network
    volumes:
      - ./logs:/var/www/logs
    depends_on: 
      - mongodb
      
  mongodb:
    container_name: mongodb
    image: mongo
    networks:
      - nodeapp-network

networks:
  nodeapp-network:
    driver: bridge